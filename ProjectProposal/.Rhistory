"Completely rural or less than 2,500 urban population, adjacent to a metro area",
NA))))))))))
# since the FIP codes are found in both data frames, I can use merge to
# join the information from both data frames into one data frame while
# creating a few columns to calculate the party winner by county as well
# as the proportion of individuals in each county with a bachelor's degree or more
election_education_df <- merge(election_results_df, education_data_df,
by.x = "combined_fips", by.y = "fips" ) %>%
mutate(college_or_more_pct = ((100 - lesscollege_pct)/ 100),
party_winner = ifelse(per_gop > per_dem, 'Republican', 'Democrat')) %>%
select(combined_fips:per_gop, college_or_more_pct, party_winner, ruralurban_cc,
ruralurban_grp)
snapshot <- election_education_df %>%
select(combined_fips, county_name, state_abbr, per_gop, college_or_more_pct, ruralurban_grp)
kable(head(snapshot, n = 40L), format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
num_counties_table <- table(election_education_df$party_winner)
kable(num_counties_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(position = "center")
ggplot(election_education_df, aes(x=college_or_more_pct)) +
geom_histogram() +
ggtitle("Proportion with a College Degree or More by County (Histogram 1)") +
xlab("Percent with College Degree or More") +
ylab("Number of U.S. Counties")
education_table <- describeBy(election_education_df$college_or_more_pct)
education_table <- education_table %>%
select(vars, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(education_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
ggplot(election_education_df, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("Percent Votes for Donald Trump by County (Histogram 2)") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties")
vote_gop_table <- describeBy(election_education_df$per_gop)
vote_gop_table <- vote_gop_table %>%
select(vars, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(vote_gop_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
rural_table1 <- describeBy(election_education_df$per_gop,
group = election_education_df$ruralurban_grp,
mat = TRUE)
rural_table1 <- rural_table1 %>%
select(group1, n, mean, sd, se)
kable(rural_table1, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
# recoding the ruralurban_grp and ruralurban_cc variable into a 3_way grouping variable
election_education_df$ruralurban_grp_3_way <- ifelse(
election_education_df$ruralurban_cc <= 3, 'Urban Counties',
ifelse(election_education_df$ruralurban_cc >= 4 &
election_education_df$ruralurban_cc < 7, 'Suburban Counties',
ifelse(election_education_df$ruralurban_cc >= 7, 'Rural Counties', NA)))
# summary statistics of the percent voting for Donald Trump split by ruralness
percent_vote_table_fnl <- describeBy(election_education_df$per_gop,
group = election_education_df$ruralurban_grp_3_way,
mat = TRUE)
percent_vote_table_fnl <- percent_vote_table_fnl %>%
select(group1, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(percent_vote_table_fnl, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
# summary statistics of the percent with a bachelor's degree or higher split by ruralness
education_table_fnl <- describeBy(election_education_df$college_or_more_pct,
group = election_education_df$ruralurban_grp_3_way,
mat = TRUE)
education_table_fnl <- education_table_fnl %>%
select(group1, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(education_table_fnl, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
boxplot(per_gop~ruralurban_grp_3_way,data=election_education_df,
col = c("#ffb3b3", "#c6ecc6", "#b3d9ff"),
main="Proportion voting for Donald Trump (Boxplot 1)",
xlab="Rural/Urban Category",
ylab="Percent GOP vote")
boxplot(college_or_more_pct~ruralurban_grp_3_way,data=election_education_df,
col = c("#ffb3b3", "#c6ecc6", "#b3d9ff"),
main="Proportion with a college degree or higher (Boxplot 2)",
xlab="Rural/Urban Category",
ylab="Percent with at least a college degree")
ggplot(election_education_df, aes(college_or_more_pct, per_gop)) +
geom_point() +
xlab("Percent with at least a college a degree") +
ylab("Percent of GOP votes per county") +
ggtitle("Relationship between education and GOP votes per county (Plot 1)")
ggplot(election_education_df, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("Before Removing Outliers") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties") +
facet_wrap(~ruralurban_grp_3_way)
election_education_df_rmoutliers <- election_education_df %>%
filter(per_gop > 0.35)
ggplot(election_education_df_rmoutliers, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("After Removing Outliers") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties") +
facet_wrap(~ruralurban_grp_3_way)
ggplot(data=election_education_df_rmoutliers, aes(x=ruralurban_grp_3_way,
y=per_gop, color=ruralurban_grp_3_way)) +
geom_point(position=position_dodge(width=0.3)) +
ggtitle("Checking for Approximately Equal Variance Across Groups") +
xlab("Percent Votes for Donald Trump") +
ylab("County Type") +
theme(legend.title = element_blank())
aov1 <- aov(per_gop ~ ruralurban_grp_3_way, data = election_education_df_rmoutliers)
summary(aov1)
TukeyHSD(aov1)
ggplot(election_education_df, aes(college_or_more_pct, per_gop)) +
geom_point() +
geom_smooth(method = lm) +
xlab("Percent with at least a college a degree") +
ylab("Percent of GOP votes per county") +
ggtitle("Relationship between education and GOP votes per county (Plot 1)")
regression1 <- lm(per_gop ~ college_or_more_pct, data = election_education_df)
summary(regression1)
library(sf)
library(maps)
library(RColorBrewer)
library(tools)
colnames(election_education_df)[1] <- "fips"
county_geoms <- merge(county.fips, election_education_df, by = "fips")
counties <- st_as_sf(map("county", plot = FALSE, fill = TRUE))
colnames(counties)[2] <- "polyname"
county_fnl_shp <- merge(counties, county_geoms, by = "polyname")
for(i in 1:length(county_fnl_shp$fips)){
county_fnl_shp$residuals[i] <- county_fnl_shp$per_gop[i] - (
0.809052 + (-0.831090 * county_fnl_shp$college_or_more_pct[i])
)
county_fnl_shp$residuals_abs[i] <- abs(county_fnl_shp$residuals[i])
}
ggplot() +
ggtitle("Residual Values of our Model by U.S. County") +
geom_sf(data = county_fnl_shp, mapping = aes(fill = county_fnl_shp$residuals_abs),
size = 0.05, color = "#333333", stroke = 0.05) +
scale_fill_distiller(palette ="Reds", direction = 1) +
labs(fill = "Residual Percentage (Absolute Value)") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(county_fnl_shp, aes(x=residuals)) +
geom_histogram() +
ggtitle("Alternative plot of residuals") +
xlab("Percent Difference between actual and predicted") +
ylab("Number of U.S. Counties")
county_fnl_shp <- county_fnl_shp %>%
mutate(county_rural = ifelse(ruralurban_grp_3_way == 'Rural Counties', 1, 0)) %>%
mutate(county_suburban = ifelse(ruralurban_grp_3_way == 'Suburban Counties', 1, 0)) %>%
mutate(county_urban = ifelse(ruralurban_grp_3_way == 'Urban Counties', 1, 0))
county_rural_show <- as.data.frame(county_fnl_shp) %>%
select(county_name, state_abbr, ruralurban_grp_3_way, county_rural, county_suburban,
county_urban)
kable(head(county_rural_show, n = 15L), format = "latex", booktabs = TRUE,
align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
regression2 <- lm(formula = per_gop ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
summary(regression2)
regression3 <- lm(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = county_fnl_shp)
summary(regression3)
summary(regression2$residuals)
ggplot(regression2, aes(x=residuals(regression2)), bins = 50) +
geom_histogram() +
ggtitle("Histogram of Residuals") +
xlab("Residuals")
plot(regression2, which = 3)
library(car)
ncvTest(regression2)
library(car)
ncvTest(regression2)
library(caret)
transformed_data <- BoxCoxTrans(county_fnl_shp$per_gop)
print(transformed_data)
county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
head(county_fnl_shp)
View(county_fnl_shp)
new_model <- lm(dist_new ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
ncvTest(new_model)
new_model <- lm(dist_new ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
ncvTest(new_model)
plot(new_model)
new_model <- lm(dist_new ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
ncvTest(new_model)
plot(new_model)
hist(new_model$residuals)
new_model <- lm(dist_new ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
ncvTest(new_model)
plot(new_model)
hist(new_model$residuals)
summary(new_model)
new_model <- lm(dist_new ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
ncvTest(new_model)
plot(new_model)
hist(new_model$residuals)
hist(county_fnl_shp$dist_new)
summary(new_model)
lmtest::bptest(regression2)
lmtest::bptest(regression2)
lmtest::bptest(new_model)
library(caret)
transformed_data <- BoxCoxTrans(county_fnl_shp$per_gop)
print(transformed_data)
county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
head(county_fnl_shp)
bc <- boxcox(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = county_fnl_shp)
library(dplyr)
library(ggplot2)
library(psych)
library(knitr)
library(kableExtra)
library(tidyverse)
# load data
election_results_df <- read.csv(paste0('https://raw.githubusercontent.com/zachalexander/',
'data_606_cunysps/master/ProjectProposal/county_level_votes.csv'))
education_data_df <- read.csv(paste0('https://raw.githubusercontent.com/zachalexander/',
'data_606_cunysps/master/ProjectProposal/education_data_fip.csv'))
# The dataset has many columns, I'm subsetting down to only columns of interest
election_results_df <- election_results_df %>%
select(combined_fips, county_name, state_abbr, per_dem, per_gop)
# I'm taking the rural/urban continuum codes and creating a separate variable
# with the qualitative values
education_data_df <- education_data_df %>%
select(fips, lesscollege_pct, ruralurban_cc) %>%
mutate(ruralurban_grp = ifelse(ruralurban_cc == 1,
"Counties in metro areas of 1 million population or more",
ifelse(ruralurban_cc == 2,
"Counties in metro areas of 250,000 to 1 million population",
ifelse(ruralurban_cc == 3,
"Counties in metro areas of fewer than 250,000 population",
ifelse(ruralurban_cc == 4,
"Urban population of 20,000 or more, adjacent to a metro area",
ifelse(ruralurban_cc == 5,
"Urban population of 20,000 or more, not adjacent to a metro area",
ifelse(ruralurban_cc == 6,
"Urban population of 2,500 to 19,999, adjacent to a metro area",
ifelse(ruralurban_cc == 7,
"Urban population of 2,500 to 19,999, not adjacent to a metro area",
ifelse(ruralurban_cc == 8,
"Completely rural or less than 2,500 urban population, adjacent to a metro area",
ifelse(ruralurban_cc == 9,
"Completely rural or less than 2,500 urban population, adjacent to a metro area",
NA))))))))))
# since the FIP codes are found in both data frames, I can use merge to
# join the information from both data frames into one data frame while
# creating a few columns to calculate the party winner by county as well
# as the proportion of individuals in each county with a bachelor's degree or more
election_education_df <- merge(election_results_df, education_data_df,
by.x = "combined_fips", by.y = "fips" ) %>%
mutate(college_or_more_pct = ((100 - lesscollege_pct)/ 100),
party_winner = ifelse(per_gop > per_dem, 'Republican', 'Democrat')) %>%
select(combined_fips:per_gop, college_or_more_pct, party_winner, ruralurban_cc,
ruralurban_grp)
snapshot <- election_education_df %>%
select(combined_fips, county_name, state_abbr, per_gop, college_or_more_pct, ruralurban_grp)
kable(head(snapshot, n = 40L), format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
num_counties_table <- table(election_education_df$party_winner)
kable(num_counties_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(position = "center")
ggplot(election_education_df, aes(x=college_or_more_pct)) +
geom_histogram() +
ggtitle("Proportion with a College Degree or More by County (Histogram 1)") +
xlab("Percent with College Degree or More") +
ylab("Number of U.S. Counties")
education_table <- describeBy(election_education_df$college_or_more_pct)
education_table <- education_table %>%
select(vars, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(education_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
ggplot(election_education_df, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("Percent Votes for Donald Trump by County (Histogram 2)") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties")
vote_gop_table <- describeBy(election_education_df$per_gop)
vote_gop_table <- vote_gop_table %>%
select(vars, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(vote_gop_table, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
rural_table1 <- describeBy(election_education_df$per_gop,
group = election_education_df$ruralurban_grp,
mat = TRUE)
rural_table1 <- rural_table1 %>%
select(group1, n, mean, sd, se)
kable(rural_table1, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
# recoding the ruralurban_grp and ruralurban_cc variable into a 3_way grouping variable
election_education_df$ruralurban_grp_3_way <- ifelse(
election_education_df$ruralurban_cc <= 3, 'Urban Counties',
ifelse(election_education_df$ruralurban_cc >= 4 &
election_education_df$ruralurban_cc < 7, 'Suburban Counties',
ifelse(election_education_df$ruralurban_cc >= 7, 'Rural Counties', NA)))
# summary statistics of the percent voting for Donald Trump split by ruralness
percent_vote_table_fnl <- describeBy(election_education_df$per_gop,
group = election_education_df$ruralurban_grp_3_way,
mat = TRUE)
percent_vote_table_fnl <- percent_vote_table_fnl %>%
select(group1, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(percent_vote_table_fnl, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
# summary statistics of the percent with a bachelor's degree or higher split by ruralness
education_table_fnl <- describeBy(election_education_df$college_or_more_pct,
group = election_education_df$ruralurban_grp_3_way,
mat = TRUE)
education_table_fnl <- education_table_fnl %>%
select(group1, n, mean, sd, median, min, max, skew, kurtosis, se)
kable(education_table_fnl, format = "latex", booktabs = TRUE, align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
boxplot(per_gop~ruralurban_grp_3_way,data=election_education_df,
col = c("#ffb3b3", "#c6ecc6", "#b3d9ff"),
main="Proportion voting for Donald Trump (Boxplot 1)",
xlab="Rural/Urban Category",
ylab="Percent GOP vote")
boxplot(college_or_more_pct~ruralurban_grp_3_way,data=election_education_df,
col = c("#ffb3b3", "#c6ecc6", "#b3d9ff"),
main="Proportion with a college degree or higher (Boxplot 2)",
xlab="Rural/Urban Category",
ylab="Percent with at least a college degree")
ggplot(election_education_df, aes(college_or_more_pct, per_gop)) +
geom_point() +
xlab("Percent with at least a college a degree") +
ylab("Percent of GOP votes per county") +
ggtitle("Relationship between education and GOP votes per county (Plot 1)")
ggplot(election_education_df, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("Before Removing Outliers") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties") +
facet_wrap(~ruralurban_grp_3_way)
election_education_df_rmoutliers <- election_education_df %>%
filter(per_gop > 0.35)
ggplot(election_education_df_rmoutliers, aes(x=per_gop), bins = 30) +
geom_histogram() +
ggtitle("After Removing Outliers") +
xlab("Percent Votes for Donald Trump") +
ylab("Number of U.S. Counties") +
facet_wrap(~ruralurban_grp_3_way)
ggplot(data=election_education_df_rmoutliers, aes(x=ruralurban_grp_3_way,
y=per_gop, color=ruralurban_grp_3_way)) +
geom_point(position=position_dodge(width=0.3)) +
ggtitle("Checking for Approximately Equal Variance Across Groups") +
xlab("Percent Votes for Donald Trump") +
ylab("County Type") +
theme(legend.title = element_blank())
aov1 <- aov(per_gop ~ ruralurban_grp_3_way, data = election_education_df_rmoutliers)
summary(aov1)
TukeyHSD(aov1)
ggplot(election_education_df, aes(college_or_more_pct, per_gop)) +
geom_point() +
geom_smooth(method = lm) +
xlab("Percent with at least a college a degree") +
ylab("Percent of GOP votes per county") +
ggtitle("Relationship between education and GOP votes per county (Plot 1)")
regression1 <- lm(per_gop ~ college_or_more_pct, data = election_education_df)
summary(regression1)
library(sf)
library(maps)
library(RColorBrewer)
library(tools)
colnames(election_education_df)[1] <- "fips"
county_geoms <- merge(county.fips, election_education_df, by = "fips")
counties <- st_as_sf(map("county", plot = FALSE, fill = TRUE))
colnames(counties)[2] <- "polyname"
county_fnl_shp <- merge(counties, county_geoms, by = "polyname")
for(i in 1:length(county_fnl_shp$fips)){
county_fnl_shp$residuals[i] <- county_fnl_shp$per_gop[i] - (
0.809052 + (-0.831090 * county_fnl_shp$college_or_more_pct[i])
)
county_fnl_shp$residuals_abs[i] <- abs(county_fnl_shp$residuals[i])
}
ggplot() +
ggtitle("Residual Values of our Model by U.S. County") +
geom_sf(data = county_fnl_shp, mapping = aes(fill = county_fnl_shp$residuals_abs),
size = 0.05, color = "#333333", stroke = 0.05) +
scale_fill_distiller(palette ="Reds", direction = 1) +
labs(fill = "Residual Percentage (Absolute Value)") +
coord_sf(xlim = c(-125,-65), ylim = c(25,50), expand = FALSE) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.direction = "horizontal",
legend.justification = "center",
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
ggplot(county_fnl_shp, aes(x=residuals)) +
geom_histogram() +
ggtitle("Alternative plot of residuals") +
xlab("Percent Difference between actual and predicted") +
ylab("Number of U.S. Counties")
county_fnl_shp <- county_fnl_shp %>%
mutate(county_rural = ifelse(ruralurban_grp_3_way == 'Rural Counties', 1, 0)) %>%
mutate(county_suburban = ifelse(ruralurban_grp_3_way == 'Suburban Counties', 1, 0)) %>%
mutate(county_urban = ifelse(ruralurban_grp_3_way == 'Urban Counties', 1, 0))
county_rural_show <- as.data.frame(county_fnl_shp) %>%
select(county_name, state_abbr, ruralurban_grp_3_way, county_rural, county_suburban,
county_urban)
kable(head(county_rural_show, n = 15L), format = "latex", booktabs = TRUE,
align=rep('c', 20)) %>%
kable_styling(latex_options = "scale_down", position = "center")
regression2 <- lm(formula = per_gop ~ college_or_more_pct + county_suburban + county_urban,
data = county_fnl_shp)
summary(regression2)
regression3 <- lm(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = county_fnl_shp)
summary(regression3)
summary(regression2$residuals)
ggplot(regression2, aes(x=residuals(regression2)), bins = 50) +
geom_histogram() +
ggtitle("Histogram of Residuals") +
xlab("Residuals")
plot(regression2, which = 3)
library(car)
ncvTest(regression2)
library(caret)
transformed_data <- BoxCoxTrans(county_fnl_shp$per_gop)
print(transformed_data)
```{r}
library(MASS)
bc <- boxcox(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = county_fnl_shp)
bc <- boxcox(per_gop ~ college_or_more_pct + ruralurban_grp_3_way)
bc <- boxcox(county_fnl_shp, per_gop ~ college_or_more_pct + ruralurban_grp_3_way)
bc <- boxcox(county_fnl_shp, per_gop ~ college_or_more_pct)
bc <- boxcox(per_gop ~ college_or_more_pct)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
bc
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
summary(bc)
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
transformation <- bc$x[which.max(bc$y)]
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
new_model <- lm(((per_gop^trans-1)/trans) ~ college_or_more_pct + ruralurban_grp_3_way)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
transformation <- bc$x[which.max(bc$y)]
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
new_model <- lm(((per_gop^trans-1)/trans) ~ college_or_more_pct + ruralurban_grp_3_way, data = county_fnl_shp)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
transformation <- bc$x[which.max(bc$y)]
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
new_model <- lm(((per_gop^transformation-1)/transformation) ~ college_or_more_pct + ruralurban_grp_3_way, data = county_fnl_shp)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct + county_fnl_shp$ruralurban_grp_3_way)
transformation <- bc$x[which.max(bc$y)]
# county_fnl_shp <- cbind(county_fnl_shp, dist_new=predict(transformed_data, county_fnl_shp$per_gop))
# head(county_fnl_shp)
new_model <- lm(((per_gop^transformation-1)/transformation) ~ college_or_more_pct + ruralurban_grp_3_way, data = county_fnl_shp)
summary(new_model)
ncvTest(new_model)
hist(new_model$residuals)
hist(county_fnl_shp$dist_new)
ncvTest(new_model)
hist(new_model$residuals)
summary(new_model)
lmtest::bptest(regression2)
lmtest::bptest(new_model)
library(MASS)
bc <- boxcox(county_fnl_shp$per_gop ~ county_fnl_shp$college_or_more_pct +
county_fnl_shp$ruralurban_grp_3_way)
transformation <- bc$x[which.max(bc$y)]
new_model <- lm(((per_gop^transformation-1)/transformation) ~ college_or_more_pct +
ruralurban_grp_3_way, data = county_fnl_shp)
summary(new_model)
plot(new_model, which = 3)
remove_outliers <- county_fnl_shp %>%
filter(per_gop >= 0.30)
remove_outliers <- county_fnl_shp %>%
filter(per_gop >= 0.30)
regressionFinal <- lm(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = remove_outliers)
remove_outliers <- county_fnl_shp %>%
filter(per_gop >= 0.30)
regressionFinal <- lm(formula = per_gop ~ college_or_more_pct + ruralurban_grp_3_way,
data = remove_outliers)
summary(regressionFinal)
plot(regressionFinal, which = 3)
plot(regressionFinal, which = 3)
ncvTest(regressionFinal)
